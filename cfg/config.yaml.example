---
CONF:
  appName: 'wapi'
  # dataPath config item is optional and if not present, the focus area directories \
  # such as account.dir and dashboard.dir values will be prepended with the base directory \
  # of the script wapi.sh
  # Example: dataPath: '/opt/repos/wapi-data/'
  dataPath: ''
  
  # Globally cleanup tmp files from processing comparisons and changes 
  # Optionally this can be set for Dashboards, Alerts, and Account functions individually as well
  cleanTmpFiles: true

  # Designing to accommodate expansion for other repository types
  # Currently allowed options: github
  repoManagementPlatform: github

  aria:
    svcAccount: 'sa::example-dashboards-gitops'
    apiToken: '4example-th1s-ismy-d3m0-apitoken4u2c'
    operationsUrl: 'https://vmware.wavefront.com'
    # New owner of found orphans 
    orphanage:
      owner: ''
      tag: 'found.orphan'
      acls:
        viewAcl:
          - # Group or User ID
          - "3v3ryone-2is2-able-todo-thisACLactio"
        modifyAcl:
          - # Group or User ID
          - "4service-user-acct-todo-thisACLactio"
    # New owner of owned items for deactivated/deleted users
    userDelete:
      owner: ''
      tag: 'found.orphan'
      acls:
        viewAcl:
          - # Group or User ID
          - "3v3ryone-2is2-able-todo-thisACLactio"
        modifyAcl:
          - # Group or User ID
          - "4service-user-acct-todo-thisACLactio"

  account:
    # Directory in the data repo which is the source of record for managed account objects
    dir: '/account'
    # Config option allows to set API token specific for each function.
    # apiToken: ''
    # Optionally this can be set for Dashboards, Alerts, and Account functions individually as well
    # cleanTmpFiles: true
    staged:
      workingDir: '/staged/accounts'
      tag: 'staged.dashboard'
    published:
      tag: 'published.account'
      # Optional to include ACLs for account functions
      acls:
        viewAcl:
          - # Group or User ID
          - "3v3ryone-2is2-able-todo-thisACLactio"
        modifyAcl:
          - # Group or User ID
          - "4service-user-acct-todo-thisACLactio"
    # Optional: set the new owner of found orphans for account objects
    # orphanage:
    #   owner:
    #   tag: 'found.orphan'
    #   acls:
    #     viewAcl:
    #       - # Group or User ID
    #       - "3v3ryone-2is2-able-todo-thisACLactio"
    #     modifyAcl:
    #       - # Group or User ID
    #       - "4service-user-acct-todo-thisACLactio"
    # Optional: set the new owner of owned items for account items of deactivated/deleted users
    # userDelete:
    #   owner:
    #   tag: 'found.orphan'
    #   acls:
    #     viewAcl:
    #       - # Group or User ID
    #       - "3v3ryone-2is2-able-todo-thisACLactio"
    #     modifyAcl:
    #       - # Group or User ID
    #       - "4service-user-acct-todo-thisACLactio"

  alert:
    # Directory in the data repo which is the source of record for managed alert objects
    dir: '/alert'
    # Config option allows to set API token specific for each function.
    # apiToken: ''
    # Optionally this can be set for Dashboards, Alerts, and Account functions individually as well
    # cleanTmpFiles: true
    staged:
      workingDir: '/staged/alerts'
      tag: 'staged.alert'
      maintenancewindow:
        title: "Staged Alert Changes maintenance window"
        reason: "To prevent duplicate alerts when changes to an alert are staged."
        create: true
        jsonTemplate: 'templates/maintenanceWindow.json.template'
    developing:
      tag: 'developing.alert'
      maintenancewindow:
        title: "Developing Alert Changes maintenance window"
        reason: "To prevent duplicate alerts when changes to an alert are being developed."
        create: true
        jsonTemplate: 'templates/maintenanceWindow.json.template'
    published:
      tag: 'published.alert'
      # Optional to include ACLs for Alert functions
      acls:
        viewAcl:
          - # Group or User ID
          - "3v3ryone-2is2-able-todo-thisACLactio"
        modifyAcl:
          - # Group or User ID
          - "4service-user-acct-todo-thisACLactio"
    # Optional: set the new owner of found orphans for account objects
    # orphanage:
    #   owner:
    #   tag: 'found.orphan'
    #   acls:
    #     viewAcl:
    #       - # Group or User ID
    #       - "3v3ryone-2is2-able-todo-thisACLactio"
    #     modifyAcl:
    #       - # Group or User ID
    #       - "4service-user-acct-todo-thisACLactio"
    # Optional: set the new owner of owned items for account items of deactivated/deleted users
    # userDelete:
    #   owner:
    #   tag: 'found.orphan'
    #   acls:
    #     viewAcl:
    #       - # Group or User ID
    #       - "3v3ryone-2is2-able-todo-thisACLactio"
    #     modifyAcl:
    #       - # Group or User ID
    #       - "4service-user-acct-todo-thisACLactio"

  dashboard:
    # Directory in the data repo which is the source of record for managed dashboard objects
    dir: '/dashboards'
    # Config option allows to set API token specific for each function.
    # apiToken: ''
    sourceDir: '/dashboards/source'
    # Optionally this can be set for Dashboards, Alerts, and Account functions individually as well
    # cleanTmpFiles: true
    staged:
      workingDir: '/staged/dashboards'
      tag: 'staged.dashboard'
    published:
      tag: 'published.dashboard'
      acls:
        viewAcl:
          - # Group or User ID
          - "3v3ryone-2is2-able-todo-thisACLactio"
        modifyAcl:
          - # Group or User ID
          - "4service-user-acct-todo-thisACLactio"
    # Optional: set the new owner of found orphans for account objects
    # orphanage:
    #   owner:
    #   tag: 'found.orphan'
    #   acls:
    #     viewAcl:
    #       - # Group or User ID
    #       - "3v3ryone-2is2-able-todo-thisACLactio"
    #     modifyAcl:
    #       - # Group or User ID
    #       - "4service-user-acct-todo-thisACLactio"
    # Optional: set the new owner of owned items for account items of deactivated/deleted users
    # userDelete:
    #   owner:
    #   tag: 'found.orphan'
    #   acls:
    #     viewAcl:
    #       - # Group or User ID
    #       - "3v3ryone-2is2-able-todo-thisACLactio"
    #     modifyAcl:
    #       - # Group or User ID
    #       - "4service-user-acct-todo-thisACLactio"

  logging:
    # Logging Level configuration works as follows:
    # DEBUG - Provides all logging output
    # INFO  - Provides all but debug messages
    # WARN  - Provides all but debug and info
    # ERROR - Provides all but debug, info and warn
    #
    # SEVERE and CRITICAL are also supported levels as extremes of ERROR
    # SEVERE and CRITICAL will exit the program and log the exit
    level: 'WARN'
    dir: '/var/log/wapi/'
